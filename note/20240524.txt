request(요청)와 response(응답)의 이해
- 클라이언트(사용자)는 서버(서비스를 제공하는 쪽)로 요청(request)를 보내고, 서버는 요청의 내용을 읽고 처리한 후 클라이언트에게 응답(response)을 보냄
- 따라서 서버에는 요청을 받는 부분과 응답을 보내야하는 부분이 있음

HTTP(HyperTextTransferProtocol)
- HTML 문서와 같은 리소스를 가져올 수 있도록 해주는 규약
- 웹에서 이루어지는 모든 데이터의 교환의 기초이며 클라이언트, 서버, 프로토콜이라고도 부름

헤더(header)
- HTTP 헤더는 클라이언트와 서버가 요청 또는 응답으로 부가적인 정보를 전송할 수 있도록 해줌
- HTTP 헤더의 구성은 KEY와 VALUE가 콜론(:)으로 구성
- key : value

헤더의 구성
- 일반헤더(General Header)
- request와 response에 모두 적용되지만 body에서 최종적으로 전송되는 데이터와는 관련이 없는 헤더
- 요청헤더(Request Header) / 클라이언트 / 헤더와 바디를 가지고 있음
- 패치될 resource나 ★클라이언트 자체에 대한 정보★를 포함하는 헤더
- 응답헤더(Response Header) / 서버 / 헤더와 바디를 가지고 있음
- ★서버에 대한 정보★와 같이 응답에 대한 부가적인 정보를 갖는 헤더

엔티티헤더(Entity Header)
- 컨텐츠의 길이나 MIME타입(컨텐츠의 인코딩 타입 / 다양한 유형의 정보를 식별하기 위한 표준)과 같이 엔티티 바디에 대한 정보를 포함하는 헤더

HTTP 상태코드
- 브라우저는 서버에서 보내주는 상태 코드를 보고 요청이 성공했는지 실패했는지 판단

HTTP 상태코드 종류
2XX : 성공을 알리는 상태코드
3XX : 리다이렉션(다른 페이지로 이동) 어떤 주소를 입력했는데 다른 주소로 넘어갈 때
4XX(요청한 사람 잘못) : 요청 오류를 나타냄
	ㄴ 400(잘못된 요청)
	ㄴ 401(권한없음)
	ㄴ 403(금지)
	ㄴ 404(찾을 수 없음)
5XX(서버 잘못) : 서버 오류를 나타냄, 요청은 제대로 왔지만 서버에 오류가 생겼을 때 발생 
	ㄴ 주로 DB에서 넘어올 때 많이 발생
	ㄴ 500(내부 서버 오류)
	ㄴ 501(불량 게이트웨이)
	ㄴ 503(서비스를 사용할 수 없음)




